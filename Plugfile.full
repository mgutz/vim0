call plug#begin(g:vim0PluginsDir)

" linter
Plug 'w0rp/ale', {'do': 'npm install -g bash-language-server'}

" intelligently close buffers :Bwipeout
Plug 'moll/vim-bbye'

" LSP et al
let g:coc_global_extensions = ['coc-tsserver', 'coc-css', 'coc-emmet', 'coc-prettier', 'coc-json', 'coc-yaml', 'coc-snippets']
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" Comment/uncomment text
Plug 'tpope/vim-commentary'

Plug 'easymotion/vim-easymotion'

Plug 'junegunn/vim-easy-align'

Plug 'editorconfig/editorconfig-vim'

" Close quotes
Plug 'jiangmiao/auto-pairs'

" Close language constructs like if, begin
" endwise can cause issues when used with plugins that map <CR>

"let g:endwise_no_mappings=1

"Plug 'kana/vim-fakeclip'
Plug 'roxma/vim-tmux-clipboard'
"Plug 'tpope/vim-tbone'

" git bindings
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" fuzzy everything buffers, files
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Go supporrt
Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }

"Plug 'Yggdroot/indentLine'
"let g:indentLine_enabled = 1
"let g:indentLine_char = '│'

"Plug 'nathanaelkane/vim-indent-guides'
Plug 'michaeljsmith/vim-indent-object'

Plug 'mgutz/vim-colors'

" intelligently reopen files at your last edit position
Plug 'farmergreg/vim-lastplace'

Plug 'mgutz/minline'
let g:minlineWithGitBranchCharacter = 1
let g:minlineHonorUserDefinedColors = 0

"Plug  'itchyny/lightline.vim'

Plug 'scrooloose/nerdtree' | Plug 'mileszs/ack.vim' | Plug 'tyok/nerdtree-ack'
Plug 'Xuyuanp/nerdtree-git-plugin' "  Nerdtree Git file status
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }


"Plug 'evanmiller/nginx-vim-syntax'
"Plug 'osyo-manga/vim-over'
"
Plug 'exu/pgsql.vim'

Plug 'aklt/plantuml-syntax'

Plug 'sheerun/vim-polyglot'
let g:polyglot_disabled = ['go', 'ansible']

Plug 'tpope/vim-surround'

"Plug 'majutsushi/tagbar'
"let g:tagbar_left=1

Plug 'tomtom/tlib_vim'
Plug 'tpope/vim-unimpaired'

if executable("rg")
	Plug 'jremmen/vim-ripgrep'
	set grepprg=rg\ --vimgrep
	let g:ackprg = 'rg --vimgrep'
endif

" Undo tree viewer
"Plug 'sjl/gundo.vim'

call plug#end()

" vim: set filetype=vim :
